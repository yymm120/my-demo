<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM smbms_user
    </select>

    <select id="findAll" resultType="com.smbms.pojo.User">
        SELECT * FROM smbms_user
    </select>

    <!-- 1. 传一个简单类型 : 通过 #{参数名}-->
    <select id="findList1" resultType="User">
        SELECT * FROM smbms_user WHERE userName LIKE CONCAT('%',#{userName},'%')
    </select>

    <!-- 2. 传多个简单类型 - 下标 : 通过 #{参数下标}-->
    <select id="findList2" resultType="User">
        SELECT * FROM smbms_user WHERE userName LIKE CONCAT('%', #{param1}, '%') AND phone = #{param2}
    </select>

    <!-- 2. 传多个简单类型 - 注解 : 通过 #{注解参数名}-->
    <select id="findList3" resultType="User">
        SELECT * FROM smbms_user WHERE userName LIKE CONCAT('%',#{userName},'%') AND phone = #{phone}
    </select>

    <!-- 3. 传一个复杂类型 - Map : 通过 #{key}-->
    <select id="findList4" resultType="User">
        SELECT * FROM smbms_user WHERE userName LIKE CONCAT('%', #{name}, '%') AND phone = #{phone}
    </select>

    <!-- 3. 传一个复杂类型 - JavaBean : 通过 #{fieldName}-->
    <select id="findList5" resultType="User">
        SELECT * FROM smbms_user WHERE userName LIKE CONCAT('%', #{userName}, '%') AND phone = #{phone}
    </select>

    <!-- Demo5.1 CRUD - create, id=addUser-->
    <insert id="addUser">
        INSERT INTO smbms_user(userName, userCode, userPassword) VALUES(#{userName}, #{userCode}, #{userPassword})
    </insert>

    <!-- Demo5.2 CRUD - delete, id=delUser-->
    <delete id="delUser">
        DELETE FROM smbms_user WHERE id=#{id}
    </delete>
    <!-- Demo5.3 CRUD - update, id=updUser-->
    <update id="updUser">
        UPDATE smbms_user SET userName=#{userName}, userCode=#{userCode}, userPassword=#{userPassword} WHERE id=#{id}
    </update>

    <!--Demo5.4 自定义结果映射, resultMap-->
    <select id="findAllResultMap" resultMap="userMap">
        SELECT u.*, r.roleName FROM smbms_user u LEFT JOIN smbms_role r ON u.userRole = r.id
    </select>
    <resultMap id="userMap" type="User">
        <!-- db中roleName字段, 映射为User中的userRoleName字段 -->
        <result column="roleName" property="userRoleName"/>
    </resultMap>

</mapper>