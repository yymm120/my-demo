<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- ================== AOP面向切面编程 ================= -->

    <!--SpringDemo2.1 - 目标对象, 该对象中的方法可以通过切点进行匹配-->
    <bean id="userService" class="com.demospring.service.impl.UserServiceImpl"/>

    <!--SpringDemo2.2 - 切面类, 该对象中的可以定义需要增强的方法, 方法名通常以before, after开头 -->
    <bean id="log" class="com.demospring.aop.Log"/>

    <!--SpringDemo2.3 - AOP配置, 配置切点, 切面 -->
    <aop:config>
        <!--切点-->
        <aop:pointcut id="pointcut" expression="execution(* com.smbms.service..*.*(..))"/>
        <!-- *:任意返回值类型, service..:service包及子包下任意类型 .*:任意方法 (..):任意参数 -->
        <aop:pointcut id="pointcut1" expression="execution(public int addUser(String, int))"/>
        <aop:pointcut id="pointcut2" expression="execution(public int delUser(int))"/>

        <!--切面-->
        <aop:aspect ref="log">
            <!--前置增强-->
            <aop:before method="before" pointcut-ref="pointcut1"/>
            <!--*:被pointcut切点匹配的所有方法执行前, 都会先执行切面log对象的before()方法 -->
            <!--后置增强, 获得切点方法的返回值, 并将result作为参数传递给切面方法-->
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut2" returning="result"/>
            <!--*:被pointcut切点匹配的所有方法完成并返回后, 都会执行log对象的afterReturning()方法 -->
            <!-- 最终增强 -->
            <aop:after method="after" pointcut-ref="pointcut" />
            <!-- 异常抛出增强-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="e"/>
            <!-- 环绕增强 -->
            <aop:around method="around" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>
</beans>